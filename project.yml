name: ground-list-up

options:
  bundleIdPrefix: {Bundle ID Prefix}
  deploymentTarget:
    iOS: 16.1
  xcodeVersion: "14.2" # 変わらない？
  # findCarthageFrameworks: true # 余計なフレームワークまで追加されてしまうためコメントアウト
  carthageExecutablePath: mint run Carthage/Carthage carthage

targets:
  ground-list-up:
    type: application
    platform: iOS
    sources:
      - ground-list-up
    settings:
      base:
        INFOPLIST_FILE: ground-list-up/Info.plist
        # PRODUCT_BUNDLE_IDENTIFIER: {Bundle ID Prefix}.ground-list-up # `bundleIdPrefix` を指定しない場合はコメントイン
    dependencies:
      - carthage: Alamofire
      - carthage: Moya
      - carthage: ReactiveMoya
      - carthage: ReactiveSwift
      - carthage: RxCocoa
      - carthage: RxMoya
      - carthage: RxRelay
      - carthage: RxSwift
    preBuildScripts:
      - script: |
                "$PODS_ROOT/R.swift/rswift" generate "$SRCROOT/$TARGET_NAME/Generated/R.generated.swift"
        name: Generate Resources with R.swift
        inputFiles:
          - $TEMP_DIR/rswift-lastrun
        outputFiles:
          - $SRCROOT/$TARGET_NAME/Generated/R.generated.swift
      - script: |
                if which mint >/dev/null; then
                  rm -f $SRCROOT/$TARGET_NAME/Generated/MockResults.swift
                  mint run mockolo mockolo --sourcedirs $SRCROOT/$TARGET_NAME --destination $SRCROOT/$TARGET_NAME/Generated/MockResults.swift
                else
                  echo "warning: Mint not installed, download from https://github.com/yonaskolb/Mint"
                fi
        name: Generate Mocks with Mockolo
        outputFiles:
          - $SRCROOT/$TARGET_NAME/Generated/MockResults.swift
    postCompileScripts:
      - script: |
                if which mint >/dev/null; then
                  mint run swiftlint swiftlint autocorrect --format
                  mint run swiftlint swiftlint
                else
                  echo "warning: Mint not installed, download from https://github.com/yonaskolb/Mint"
                fi
        name: Run SwiftLint
      - script: |
                if ! which mint >/dev/null; then
                  echo "warning: Mint not installed, download from https://github.com/yonaskolb/Mint"
                  exit 0
                fi
                git_path=/usr/local/bin/git
                files=$($git_path diff --diff-filter=d --name-only -- "*.swift" "*.h" "*.m")
                if (test -z $files) || (test ${#files[@]} -eq 0); then
                  echo "no files changed."
                  exit 0
                fi
                options=""
                for file in $files
                do
                  options="$options $SRCROOT/$file"
                done
                mint run SpellChecker SpellChecker --yml $SRCROOT/spell-checker.yml -- $options
        name: Run SpellChecker
  ground-list-upTests:
    type: bundle.unit-test
    platform: iOS
    sources:
      - ground-list-upTests
    settings:
      base:
        INFOPLIST_FILE: ground-list-upTests/Info.plist
        # PRODUCT_BUNDLE_IDENTIFIER: {Bundle ID Prefix}.ground-list-upTests
    dependencies:
      - target: ground-list-up

  ground-list-upUITests:
    type: bundle.ui-testing
    platform: iOS
    sources:
      - ground-list-upUITests
    settings:
      base:
        INFOPLIST_FILE: ground-list-upUITests/Info.plist
        # PRODUCT_BUNDLE_IDENTIFIER: {Bundle ID Prefix}.ground-list-upUITests
    dependencies:
      - target: ground-list-up

schemes:
  ground-list-up:
    build:
      targets:
        ground-list-up: all
        # ground-list-upTests: [test] # デフォルト？
        # ground-list-upUITests: [test] # デフォルト？
    run:
      config: Debug
    test:
      config: Debug
      gatherCoverageData: true
      coverageTargets:
        - ground-list-up
      targets:
        - name: ground-list-upTests
          parallelizable: true
          randomExecutionOrder: true
        - name: ground-list-upUITests
          parallelizable: true
          randomExecutionOrder: true
    profile:
      config: Release
    analyze:
      config: Debug
    archive:
      config: Release
